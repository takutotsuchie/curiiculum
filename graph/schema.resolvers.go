package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.27

import (
	"context"
	DB "curiiculum/db"
	"curiiculum/graph/model"
	"log"
)

// CreateTask is the resolver for the createTask field.
// リゾルバは本当に、DB処理だけにしよう
func (r *mutationResolver) CreateTask(ctx context.Context, input model.NewTask) (*model.Task, error) {
	ans, err := DB.CreateTask(ctx, input)
	return ans, err
}

// UpdateTask is the resolver for the updateTask field.
func (r *mutationResolver) UpdateTask(ctx context.Context, input model.NewTask) (*model.Task, error) {
	ans, err := DB.UpdateTask(ctx, input)
	return ans, err
}

// DeleteTask is the resolver for the deleteTask field.
func (r *mutationResolver) DeleteTask(ctx context.Context, input model.NewTask) (*model.Task, error) {
	ans, err := DB.DeleteTask(ctx, input)
	return ans, err
}

// User is the resolver for the user field.
// このクエリはやらない
func (r *queryResolver) User(ctx context.Context, id string) (*model.User, error) {
	log.Print("このクエリは無効です")
	return nil, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
